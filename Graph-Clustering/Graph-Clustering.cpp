/* Richard Schneider
   Graph-Clustering.cpp
   Description: This project is used for educational purposes. It is designed 
   to consume a graph dataset from a file, convert it into a matrix, and then
   cluster the vertices based on the Spectral Clustering algorithm which
   uses the Eigenvector centrality metric for each of the Eigenvalues to
   convert the graph clustering problem into a vector-based problem. */

#include <iostream>
#include <utility> 
#include <vector>
#include "LinAlg.h"
#include "Graph.h"

int main()
{
	std::vector<std::vector<double>> myVect1{
		{1, 2, 3},
		{4, 5, 6},
		{7, 8, 9}
	};

	std::vector<std::vector<double>> myVect2{
		{1, 2, 3},
		{0, 5, 6},
		{0, 0, 9}
	};

	std::vector<std::vector<double>> myVect3{
		{0.73054, 0.715638, 0.673198, 0.0587931},
		{0.189321, 0.447365, 0.596879, 0.448019},
		{0.908993, 0.847864, 0.237653, 0.708224}
	};

	std::vector<std::vector<double>> myVect4{
		{0.751884},
		{0.039623},
		{0.811679},
		{0.919456}
	};
	std::vector<std::vector<double>> myVect5{
		{0.83462, 0.699265, 0.930962, 0.863479},
		{0.473505, 0.691988, 0.747999, 0.225765},
		{0.933097, 0.105651, 0.280316, 0.0671968},
		{0.496422, 0.556214, 0.727784, 0.789878}
	};
	std::vector<std::vector<double>> myVect6{
		{1, -5, 8, 3},
		{1, -2, 1, 2},
		{2, -1, -5, 6}
	};
	std::vector<std::vector<double>> myVect7{
		{1, -5, 8},
		{1, -2, 1},
		{2, -1, -5},
		{2, 4, 7}
	};
	std::vector<std::vector<double>> myVect8{
		{1}, {2}, {3}
	};
	std::vector<std::vector<double>> myVect9{
		{1, 2, 3},
		{5, 7, 9},
		{11, 13, 17}
	};
	std::vector<double> myVect10{ 1, 2, 3 };
	std::vector<double> myVect12{ 1, 0, 0 };

	std::vector<std::vector<double>> myVect11{
		{0.749935, 0.0239392, 0.909929},
		{0.233785, 0.0521392, 0.192435},
		{0.632099, 0.611084, 0.748108}
	};

	std::vector<std::vector<double>> myVect13{
		{3, 2},
		{1, 2}
	};
	std::vector<std::vector<double>> myVect14{
		{1, 2, 3, 5},
		{3, 5, 7, 11},
		{5, 7, 11, 13}
	};
	std::vector<std::vector<double>> myVect15{
		{0.164241, -0.436304},
		{0.028831, 0.049459}
	};
	std::vector<std::vector<double>> myVect16{
		{2.37513, 0, 0, 0},
		{0, -0.106850, 0.096361, 0},
		{0, -0.096361, -0.106850, 0},
		{0, 0, 0, 0.00589363}
	};
	std::vector<std::vector<double>> myVect17{
		{0.99267, 0.519408, 0.543308, 0.592436, 0.140309, 0.464678},
		{0.13258, 0.927667, 0.205553, 0.883686, 0.557494, 0.140629},
		{0.11488, 0.259932, 0.523339, 0.451498, 0.415519, 0.602938},
		{0.241713, 0.582723, 0.267322, 0.216131, 0.561923, 0.901802},
		{0.376637, 0.877729, 0.183621, 0.177625, 0.208695, 0.956775},
		{0.0170518, 0.951146, 0.238967, 0.224569, 0.619109, 0.489213}
	};
	std::vector<std::vector<double>> myVect18{
		{-6, 3},
		{4, 5}
	};
	std::vector<std::vector<double>> myVect19{
		{2, 0, 0},
		{1, 1, 0},
		{2, 1, 0},
		{0, 4, 5},
		{0, 4, 3},
		{0, 4, 4},
		{0, 4, 6}
	};
	std::vector<std::vector<double>> myVect20{ {0.00599594, 0.189883, 0.554471, 0.273501, 0.884777, 0.26993, 0.209555, 0.722662, 0.497253, 0.287659}, {0.127852, 0.655597, 0.0507712, 0.0277257, 0.628421, 0.148568, 0.212504, 0.49514, 0.272194, 0.165516}, {0.874412, 0.596588, 0.67873, 0.0444456, 0.104441, 0.233653, 0.910988, 0.319981, 0.310769, 0.646131}, {0.790938, 0.387259, 0.177265, 0.711892, 0.402326, 0.88426, 0.113662, 0.165483, 0.33968, 0.457963}, {0.67347, 0.802464, 0.363759, 0.647231, 0.263857, 0.0879872, 0.884815, 0.870539, 0.3061, 0.365749}, {0.327509, 0.283322, 0.159724, 0.748487, 0.472467, 0.509687, 0.184917, 0.339985, 0.205916, 0.13117}, {0.106682, 0.566404, 0.574574, 0.859659, 0.881491, 0.873722, 0.157727, 0.356831, 0.119701, 0.0721661}, {0.873969, 0.833181, 0.578739, 0.494259, 0.520682, 0.958929, 0.467718, 0.684895, 0.678956, 0.696029}, {0.223217, 0.0118114, 0.0978953, 0.719587, 0.309649, 0.686318, 0.0578129, 0.00777164, 0.327125, 0.414067}, {0.37404, 0.999844, 0.0533531, 0.180717, 0.546348, 0.457459, 0.833007, 0.772175, 0.5541, 0.386429} };
	std::vector<std::vector<double>> myVect21{ {0.291267, 0.516343, 0.706424, 0.207354, 0.105903, 0.423912, 0.415327, 0.514263, 0.526924, 0.566073, 0.582401, 0.594694, 0.517118, 0.9751, 0.150114, 0.856099, 0.0186305, 0.266302, 0.604023, 0.0943949, 0.246949, 0.889362, 0.295889, 0.196626, 0.0873713, 0.148496, 0.148301, 0.407869, 0.770724, 0.676031, 0.85599, 0.316712, 0.715785, 0.619727, 0.88361, 0.974393, 0.26586, 0.238652, 0.158008, 0.436099}, {0.937078, 0.634099, 0.455916, 0.742385, 0.00551475, 0.618125, 0.212266, 0.92319, 0.155977, 0.819806, 0.659268, 0.549628, 0.16794, 0.515648, 0.134796, 0.00143367, 0.0810884, 0.377447, 0.489387, 0.541539, 0.895901, 0.0920248, 0.262648, 0.382082, 0.514969, 0.585274, 0.54075, 0.458293, 0.582316, 0.225827, 0.727581, 0.0121099, 0.022194, 0.408496, 0.974563, 0.451681, 0.267506, 0.487282, 0.232043, 0.434534}, {0.744364, 0.601427, 0.869445, 0.421177, 0.3655, 0.58969, 0.224782, 0.0336132, 0.517213, 0.177778, 0.358362, 0.37943, 0.329442, 0.940199, 0.995488, 0.989625, 0.905365, 0.320666, 0.751491, 0.73535, 0.134204, 0.892994, 0.66651, 0.751781, 0.0239114, 0.820651, 0.195736, 0.424142, 0.0273974, 0.164003, 0.553781, 0.237509, 0.63944, 0.942455, 0.416763, 0.739335, 0.77316, 0.9866, 0.86447, 0.058298}, {0.105596, 0.38078, 0.299304, 0.591814, 0.0800274, 0.90046, 0.63436, 0.865716, 0.192294, 0.634535, 0.33768, 0.352596, 0.633367, 0.604045, 0.190344, 0.514832, 0.351525, 0.391217, 0.243236, 0.0755825, 0.249251, 0.777453, 0.0487553, 0.775463, 0.37194, 0.31115, 0.747145, 0.358729, 0.335885, 0.481303, 0.529756, 0.137273, 0.0348179, 0.989944, 0.586609, 0.623565, 0.987944, 0.0466937, 0.678584, 0.0788316}, {0.981075, 0.869323, 0.614354, 0.246207, 0.202715, 0.8516, 0.0895405, 0.723025, 0.980785, 0.798995, 0.705944, 0.280939, 0.524322, 0.0100743, 0.697671, 0.378541, 0.136242, 0.408393, 0.937174, 0.126699, 0.34776, 0.162119, 0.730402, 0.8975, 0.576469, 0.335488, 0.724614, 0.0227142, 0.750901, 0.492225, 0.343216, 0.25053, 0.991948, 0.535938, 0.11864, 0.495717, 0.118292, 0.439291, 0.0833216, 0.39996}, {0.139323, 0.185059, 0.383071, 0.18666, 0.407239, 0.926577, 0.449278, 0.201657, 0.281541, 0.404874, 0.233772, 0.372427, 0.678639, 0.133374, 0.328701, 0.0108269, 0.940886, 0.591166, 0.898906, 0.251356, 0.86839, 0.37133, 0.167534, 0.694657, 0.624266, 0.139339, 0.328205, 0.136202, 0.174992, 0.395569, 0.11053, 0.586204, 0.0108372, 0.792064, 0.544193, 0.542797, 0.0302927, 0.553022, 0.65616, 0.867164}, {0.278124, 0.909787, 0.564575, 0.91543, 0.555618, 0.967478, 0.790668, 0.501395, 0.647577, 0.973427, 0.445408, 0.437034, 0.26794, 0.714014, 0.762553, 0.572165, 0.438633, 0.756235, 0.619362, 0.981846, 0.0145823, 0.274248, 0.0780159, 0.195955, 0.152022, 0.84903, 0.54513, 0.406992, 0.155637, 0.23232, 0.157508, 0.168845, 0.718754, 0.0674594, 0.283375, 0.513824, 0.0122259, 0.931579, 0.777559, 0.423458}, {0.213304, 0.511604, 0.843103, 0.508272, 0.135885, 0.0667294, 0.724627, 0.557828, 0.605999, 0.282571, 0.881725, 0.0806196, 0.823022, 0.470847, 0.0647341, 0.908852, 0.881637, 0.100425, 0.721145, 0.190123, 0.72614, 0.930248, 0.808622, 0.37037, 0.728785, 0.268666, 0.830642, 0.633907, 0.566455, 0.763194, 0.520075, 0.427453, 0.640441, 0.504796, 0.032233, 0.773354, 0.427002, 0.446058, 0.818043, 0.438747}, {0.306659, 0.193793, 0.0963054, 0.941196, 0.389067, 0.864847, 0.104394, 0.61638, 0.0391986, 0.56752, 0.995111, 0.601284, 0.802075, 0.218206, 0.77641, 0.613954, 0.570548, 0.0241816, 0.826428, 0.827283, 0.469656, 0.37, 0.459863, 0.804333, 0.765137, 0.186728, 0.704403, 0.651777, 0.757708, 0.0904349, 0.180757, 0.291201, 0.579203, 0.767042, 0.185088, 0.880431, 0.978721, 0.898235, 0.830447, 0.680999}, {0.247803, 0.244073, 0.835974, 0.135796, 0.0628379, 0.116808, 0.546889, 0.564782, 0.440416, 0.353106, 0.293026, 0.307045, 0.580167, 0.804167, 0.767786, 0.0380504, 0.972696, 0.302106, 0.403921, 0.647513, 0.836017, 0.356715, 0.767074, 0.00190746, 0.2828, 0.379112, 0.37698, 0.577311, 0.795394, 0.493556, 0.216137, 0.492718, 0.477687, 0.583335, 0.41744, 0.237767, 0.972073, 0.373115, 0.692528, 0.20313}, {0.901227, 0.760834, 0.636623, 0.0873871, 0.384506, 0.754977, 0.586757, 0.499547, 0.55865, 0.617083, 0.628878, 0.387125, 0.014542, 0.33198, 0.451644, 0.451323, 0.717377, 0.471391, 0.511653, 0.210025, 0.920972, 0.256158, 0.0791963, 0.836478, 0.585822, 0.568167, 0.309996, 0.767465, 0.420197, 0.29154, 0.594966, 0.16053, 0.517039, 0.80387, 0.320717, 0.562208, 0.334966, 0.0449471, 0.043083, 0.143033}, {0.362729, 0.00560524, 0.654972, 0.189166, 0.872541, 0.270191, 0.211669, 0.505694, 0.418308, 0.835595, 0.147414, 0.181374, 0.716671, 0.811429, 0.986372, 0.0609751, 0.603064, 0.456044, 0.427064, 0.215338, 0.874937, 0.608841, 0.255215, 0.104679, 0.202263, 0.669733, 0.984314, 0.997649, 0.463096, 0.952714, 0.564027, 0.154609, 0.0227575, 0.913809, 0.588625, 0.532784, 0.952057, 0.0956494, 0.385279, 0.481376}, {0.0111475, 0.148917, 0.296778, 0.887018, 0.405323, 0.840317, 0.251315, 0.837506, 0.165835, 0.109474, 0.681711, 0.254009, 0.823011, 0.847202, 0.0668218, 0.489624, 0.125574, 0.617497, 0.971676, 0.945088, 0.28644, 0.790403, 0.20887, 0.186397, 0.470231, 0.953062, 0.919308, 0.635703, 0.842917, 0.486879, 0.485308, 0.574622, 0.242467, 0.0224407, 0.472232, 0.231944, 0.981452, 0.726354, 0.793556, 0.699525}, {0.902725, 0.489689, 0.391325, 0.789968, 0.0812146, 0.832575, 0.98983, 0.728193, 0.468912, 0.629207, 0.284393, 0.463419, 0.351675, 0.311995, 0.89424, 0.121087, 0.602275, 0.332732, 0.913292, 0.833033, 0.172122, 0.83618, 0.78387, 0.0951401, 0.512039, 0.493907, 0.129041, 0.946427, 0.406752, 0.793494, 0.56643, 0.335764, 0.24184, 0.693676, 0.873755, 0.905696, 0.562847, 0.390978, 0.564736, 0.556809}, {0.478072, 0.643583, 0.932131, 0.423827, 0.991393, 0.984847, 0.116375, 0.19472, 0.405041, 0.609318, 0.236517, 0.0791302, 0.334837, 0.592795, 0.535956, 0.329899, 0.231933, 0.342656, 0.195032, 0.221945, 0.120362, 0.836626, 0.292699, 0.804582, 0.0941693, 0.169836, 0.26311, 0.3268, 0.447665, 0.259878, 0.0410161, 0.27517, 0.265654, 0.78493, 0.0149609, 0.305032, 0.743378, 0.871052, 0.889311, 0.894706}, {0.106609, 0.691119, 0.990252, 0.229913, 0.810542, 0.205907, 0.429881, 0.784281, 0.598729, 0.361578, 0.12969, 0.692577, 0.454857, 0.330999, 0.296199, 0.662205, 0.103461, 0.347655, 0.158205, 0.556161, 0.466054, 0.99803, 0.734126, 0.430815, 0.874831, 0.537732, 0.0206284, 0.583131, 0.472804, 0.378978, 0.884302, 0.784888, 0.61002, 0.971058, 0.74072, 0.273124, 0.503761, 0.664599, 0.826518, 0.906297}, {0.109738, 0.397727, 0.451842, 0.444367, 0.494207, 0.33763, 0.154804, 0.240148, 0.882906, 0.607409, 0.14793, 0.795782, 0.0285663, 0.310477, 0.104245, 0.515216, 0.688475, 0.932492, 0.930394, 0.37528, 0.88213, 0.583095, 0.375931, 0.809638, 0.945818, 0.385747, 0.582178, 0.98314, 0.140092, 0.978105, 0.829961, 0.519201, 0.182307, 0.394313, 0.33409, 0.118579, 0.0663234, 0.31932, 0.295676, 0.12908}, {0.351354, 0.837826, 0.370535, 0.0688135, 0.00159444, 0.855831, 0.452554, 0.894961, 0.110885, 0.154923, 0.0468751, 0.502264, 0.465252, 0.0263952, 0.511728, 0.450919, 0.919322, 0.4969, 0.371991, 0.723409, 0.681245, 0.640873, 0.291008, 0.673012, 0.392222, 0.522092, 0.167482, 0.147712, 0.332146, 0.0940314, 0.714796, 0.783944, 0.669669, 0.112774, 0.243397, 0.326378, 0.723697, 0.122093, 0.58943, 0.555954}, {0.937703, 0.227844, 0.145077, 0.497309, 0.346923, 0.55459, 0.535009, 0.885582, 0.656755, 0.604188, 0.91883, 0.0120778, 0.552803, 0.0527033, 0.747451, 0.288715, 0.157434, 0.0626778, 0.696167, 0.341843, 0.201495, 0.808512, 0.77278, 0.164007, 0.674928, 0.743692, 0.890819, 0.95341, 0.333242, 0.0804451, 0.479296, 0.863516, 0.261221, 0.484059, 0.581086, 0.655445, 0.804955, 0.750664, 0.956057, 0.189372}, {0.512732, 0.577487, 0.834753, 0.61654, 0.600636, 0.548119, 0.851038, 0.785661, 0.806292, 0.868811, 0.0526642, 0.106003, 0.570886, 0.981056, 0.185475, 0.520204, 0.197956, 0.931896, 0.585107, 0.789581, 0.507684, 0.045461, 0.0874561, 0.59278, 0.581242, 0.950723, 0.087831, 0.307086, 0.215847, 0.465577, 0.488664, 0.772463, 0.242799, 0.816938, 0.304086, 0.392279, 0.249239, 0.214044, 0.663436, 0.511415}, {0.983279, 0.124727, 0.127547, 0.6903, 0.203692, 0.0545448, 0.577138, 0.846701, 0.0821711, 0.653527, 0.41353, 0.400448, 0.14963, 0.642515, 0.915268, 0.581402, 0.583837, 0.104418, 0.70452, 0.78545, 0.797523, 0.812543, 0.635421, 0.455526, 0.554883, 0.991091, 0.124729, 0.0119363, 0.419377, 0.853478, 0.648847, 0.635853, 0.87127, 0.201796, 0.766464, 0.414339, 0.400298, 0.926072, 0.0377225, 0.0486408}, {0.270795, 0.427782, 0.57596, 0.883951, 0.573844, 0.899237, 0.791977, 0.227479, 0.809232, 0.559072, 0.691698, 0.60373, 0.30494, 0.764783, 0.555685, 0.881879, 0.790178, 0.896474, 0.737925, 0.167181, 0.72679, 0.637523, 0.317414, 0.827249, 0.163958, 0.229377, 0.267706, 0.99256, 0.345594, 0.641711, 0.368184, 0.841764, 0.467356, 0.205313, 0.35452, 0.935122, 0.120333, 0.375825, 0.953141, 0.92706}, {0.818781, 0.996193, 0.209918, 0.18118, 0.281003, 0.695577, 0.769073, 0.489772, 0.299771, 0.686713, 0.597419, 0.881868, 0.273843, 0.159485, 0.19697, 0.575877, 0.329962, 0.656034, 0.488601, 0.484248, 0.608179, 0.195179, 0.693893, 0.460236, 0.26922, 0.00404353, 0.517955, 0.962187, 0.547913, 0.378335, 0.0364815, 0.539037, 0.446832, 0.81861, 0.748732, 0.0889247, 0.224043, 0.829188, 0.610557, 0.599007}, {0.609572, 0.0377701, 0.0926449, 0.0283572, 0.443344, 0.859739, 0.252465, 0.851289, 0.923831, 0.121807, 0.661917, 0.315254, 0.0950774, 0.87767, 0.0833045, 0.972962, 0.211067, 0.613257, 0.950976, 0.0861669, 0.177417, 0.77776, 0.525836, 0.0933737, 0.00620466, 0.382171, 0.59317, 0.607534, 0.716196, 0.885074, 0.581877, 0.880035, 0.396313, 0.497999, 0.487144, 0.849695, 0.940394, 0.186483, 0.328609, 0.494254}, {0.105126, 0.572896, 0.0110946, 0.330203, 0.228338, 0.232234, 0.704438, 0.765812, 0.949718, 0.974936, 0.376546, 0.0319281, 0.807285, 0.106056, 0.225622, 0.147157, 0.955181, 0.873555, 0.426644, 0.322557, 0.744516, 0.955903, 0.765006, 0.140847, 0.250966, 0.335756, 0.407811, 0.621834, 0.480119, 0.329732, 0.219655, 0.60296, 0.17745, 0.754832, 0.855089, 0.351941, 0.914381, 0.73403, 0.115258, 0.921676}, {0.32949, 0.0189203, 0.564622, 0.12175, 0.405004, 0.918539, 0.785221, 0.839772, 0.599636, 0.30827, 0.290615, 0.0519666, 0.187233, 0.727014, 0.329204, 0.236675, 0.934212, 0.595861, 0.059851, 0.749015, 0.859232, 0.388406, 0.50982, 0.842423, 0.876022, 0.461828, 0.379646, 0.69906, 0.415005, 0.234358, 0.142043, 0.989742, 0.0808213, 0.532974, 0.249981, 0.258553, 0.762527, 0.485644, 0.681278, 0.472005}, {0.645731, 0.514938, 0.281534, 0.754226, 0.837876, 0.837777, 0.809134, 0.443845, 0.998228, 0.873028, 0.916638, 0.419576, 0.675577, 0.998033, 0.115524, 0.36586, 0.480746, 0.698719, 0.593671, 0.624161, 0.433986, 0.205987, 0.258889, 0.163672, 0.747451, 0.240769, 0.439764, 0.472352, 0.954344, 0.392513, 0.917769, 0.384353, 0.380318, 0.964085, 0.854075, 0.578528, 0.962907, 0.919962, 0.463778, 0.78144}, {0.882925, 0.119395, 0.85402, 0.876869, 0.437994, 0.269847, 0.152349, 0.718761, 0.572644, 0.708638, 0.200046, 0.263857, 0.202116, 0.775068, 0.226444, 0.729725, 0.546796, 0.887373, 0.225261, 0.783125, 0.535718, 0.926318, 0.113684, 0.229576, 0.0288491, 0.988588, 0.0162179, 0.0677806, 0.592276, 0.305934, 0.19563, 0.181766, 0.227275, 0.519397, 0.692671, 0.33451, 0.416921, 0.8172, 0.434116, 0.0684275}, {0.0755869, 0.623576, 0.27768, 0.789187, 0.0254971, 0.67883, 0.419448, 0.981555, 0.604103, 0.569733, 0.714725, 0.841998, 0.580944, 0.751734, 0.739103, 0.756579, 0.770689, 0.875624, 0.732168, 0.0730075, 0.525612, 0.928602, 0.821768, 0.839649, 0.116343, 0.123187, 0.742285, 0.0625561, 0.0552568, 0.00147453, 0.684199, 0.974958, 0.929149, 0.198424, 0.259151, 0.674873, 0.422328, 0.695041, 0.651199, 0.740918}, {0.443191, 0.467163, 0.816388, 0.442147, 0.44368, 0.287435, 0.656273, 0.909569, 0.759497, 0.600274, 0.906452, 0.329738, 0.869686, 0.0080819, 0.0311505, 0.830405, 0.266934, 0.0299648, 0.820032, 0.361488, 0.54459, 0.199716, 0.203065, 0.389982, 0.600909, 0.949288, 0.0261607, 0.581684, 0.734463, 0.817838, 0.416976, 0.377033, 0.404268, 0.336214, 0.862947, 0.958844, 0.976774, 0.0936539, 0.550294, 0.798372}, {0.138081, 0.256309, 0.306183, 0.381891, 0.274107, 0.826917, 0.710451, 0.319631, 0.495936, 0.172438, 0.585996, 0.156263, 0.174144, 0.91055, 0.648614, 0.449994, 0.532365, 0.903844, 0.0107364, 0.494752, 0.314096, 0.723617, 0.554724, 0.481765, 0.142426, 0.437631, 0.23902, 0.371641, 0.218233, 0.408299, 0.443695, 0.748629, 0.287563, 0.180444, 0.366979, 0.185788, 0.893197, 0.580542, 0.179738, 0.429929}, {0.520443, 0.855811, 0.226993, 0.266475, 0.0132826, 0.242815, 0.0526263, 0.108754, 0.0334155, 0.36131, 0.237918, 0.717596, 0.419947, 0.726257, 0.255028, 0.537841, 0.72267, 0.6031, 0.573978, 0.109754, 0.0734645, 0.4857, 0.386984, 0.12297, 0.532033, 0.29656, 0.646374, 0.469871, 0.284657, 0.14806, 0.754997, 0.261473, 0.379252, 0.420836, 0.619769, 0.457214, 0.115792, 0.104192, 0.896137, 0.73808}, {0.992201, 0.0686811, 0.612949, 0.449758, 0.48501, 0.513929, 0.022187, 0.104735, 0.00498468, 0.12325, 0.714602, 0.249814, 0.000582442, 0.98314, 0.115567, 0.832425, 0.936368, 0.244573, 0.538558, 0.102496, 0.789678, 0.376097, 0.31627, 0.0982072, 0.496465, 0.878775, 0.746047, 0.861228, 0.0268262, 0.282026, 0.143272, 0.250703, 0.375362, 0.824754, 0.0466017, 0.455031, 0.96586, 0.180738, 0.968143, 0.423749}, {0.67978, 0.430177, 0.276288, 0.594436, 0.240081, 0.67143, 0.285768, 0.964752, 0.394494, 0.380513, 0.587243, 0.787799, 0.073529, 0.758262, 0.865244, 0.793786, 0.393343, 0.0533837, 0.772443, 0.707872, 0.0233158, 0.241783, 0.523, 0.729122, 0.742152, 0.369271, 0.985702, 0.679457, 0.550458, 0.324952, 0.985822, 0.348522, 0.499803, 0.260698, 0.648728, 0.572761, 0.445005, 0.856673, 0.476145, 0.448102}, {0.872882, 0.79398, 0.167937, 0.546477, 0.273096, 0.693815, 0.787454, 0.575777, 0.923834, 0.532433, 0.775451, 0.90592, 0.860002, 0.38806, 0.0350177, 0.0823035, 0.940222, 0.689108, 0.937435, 0.36986, 0.728678, 0.795763, 0.252685, 0.758773, 0.573992, 0.573346, 0.643287, 0.114338, 0.69844, 0.409766, 0.463179, 0.317992, 0.328474, 0.529678, 0.0390947, 0.962838, 0.245423, 0.513923, 0.513414, 0.600657}, {0.0550365, 0.2378, 0.432368, 0.562621, 0.488864, 0.112076, 0.260854, 0.0613837, 0.30201, 0.925803, 0.453386, 0.603397, 0.110543, 0.0583636, 0.0365487, 0.814773, 0.881631, 0.646935, 0.740849, 0.751471, 0.360115, 0.69775, 0.137644, 0.224629, 0.802307, 0.356993, 0.77559, 0.312173, 0.00167326, 0.365116, 0.71627, 0.575578, 0.199612, 0.735251, 0.189978, 0.802317, 0.962404, 0.520695, 0.506332, 0.416158}, {0.763807, 0.697236, 0.866748, 0.303549, 0.07988, 0.21249, 0.780909, 0.952506, 0.526502, 0.127197, 0.277128, 0.479157, 0.064054, 0.014349, 0.555908, 0.236138, 0.255658, 0.150526, 0.931828, 0.180248, 0.975544, 0.483062, 0.826966, 0.489936, 0.805282, 0.927747, 0.118237, 0.208099, 0.406239, 0.937262, 0.0321523, 0.0712661, 0.752876, 0.526861, 0.29543, 0.0731156, 0.043618, 0.716433, 0.840851, 0.256934}, {0.450657, 0.366977, 0.0340918, 0.905066, 0.228382, 0.102346, 0.688078, 0.688609, 0.286731, 0.286595, 0.551458, 0.296783, 0.147314, 0.160341, 0.47525, 0.0358503, 0.525581, 0.287801, 0.788485, 0.500163, 0.184268, 0.7847, 0.553755, 0.630111, 0.258938, 0.0821278, 0.992061, 0.94968, 0.894375, 0.514563, 0.380912, 0.656134, 0.185307, 0.955686, 0.833732, 0.309598, 0.759105, 0.0428795, 0.5893, 0.179741}, {0.426976, 0.581309, 0.0405146, 0.107745, 0.946168, 0.607218, 0.149713, 0.586283, 0.0874843, 0.19786, 0.303735, 0.360595, 0.0858549, 0.630359, 0.320436, 0.275038, 0.604943, 0.207131, 0.588557, 0.0989584, 0.510283, 0.00207311, 0.0537512, 0.483965, 0.700446, 0.000667967, 0.435712, 0.587457, 0.507065, 0.236681, 0.403856, 0.319973, 0.0776019, 0.109843, 0.798959, 0.223543, 0.177242, 0.684345, 0.782163, 0.745913}, {0.0794309, 0.394938, 0.735156, 0.160316, 0.369042, 0.936374, 0.331734, 0.368894, 0.772709, 0.148451, 0.605277, 0.70222, 0.0119109, 0.495128, 0.595935, 0.995087, 0.0776434, 0.470398, 0.277577, 0.314729, 0.949823, 0.559056, 0.999746, 0.682282, 0.418537, 0.36702, 0.781657, 0.264057, 0.670322, 0.0731341, 0.444875, 0.340389, 0.816233, 0.619501, 0.221311, 0.127334, 0.902606, 0.178967, 0.856928, 0.127353} };
	// takes 4:30 minutes to compute without Hessenberg form from Householder transformations
	std::vector<std::vector<double>> myVect22{ {0.221269, 0.286016, 0.396603, 0.182951, 0.420641, 0.331402, 0.872491, 0.287473, 0.290129, 0.839392, 0.811296, 0.818467, 0.617238, 0.548193, 0.97911, 0.151763, 0.654104, 0.589652, 0.318316, 0.710709}, {0.387114, 0.827298, 0.667698, 0.500028, 0.343328, 0.665884, 0.673083, 0.786534, 0.483306, 0.375236, 0.141949, 0.55018, 0.463119, 0.490043, 0.556055, 0.866353, 0.764527, 0.498701, 0.370549, 0.935312}, {0.553783, 0.448755, 0.627013, 0.675806, 0.368425, 0.735877, 0.376563, 0.792532, 0.286521, 0.800942, 0.618975, 0.935434, 0.767826, 0.341063, 0.84643, 0.0978259, 0.103394, 0.637044, 0.687733, 0.63131}, {0.0910004, 0.72245, 0.649634, 0.312883, 0.922606, 0.267925, 0.231197, 0.548463, 0.888921, 0.832933, 0.679123, 0.393328, 0.500984, 0.0982529, 0.772928, 0.268295, 0.498871, 0.95299, 0.302448, 0.0138601}, {0.304027, 0.80255, 0.608026, 0.364727, 0.194316, 0.684889, 0.368313, 0.307277, 0.371429, 0.296086, 0.299334, 0.39123, 0.75277, 0.416288, 0.638786, 0.870809, 0.893657, 0.385174, 0.974194, 0.567724}, {0.70991, 0.754775, 0.18829, 0.230416, 0.59815, 0.531865, 0.340868, 0.136594, 0.523549, 0.0237192, 0.48002, 0.323898, 0.34819, 0.734102, 0.216653, 0.0776993, 0.749997, 0.226864, 0.708795, 0.821999}, {0.890713, 0.635691, 0.0702347, 0.458783, 0.887029, 0.846564, 0.363669, 0.259474, 0.445837, 0.767296, 0.845415, 0.506047, 0.330361, 0.970346, 0.0305268, 0.20038, 0.203477, 0.778147, 0.449928, 0.459567}, {0.49093, 0.59667, 0.277083, 0.460423, 0.429111, 0.503191, 0.174999, 0.710228, 0.632828, 0.508144, 0.585325, 0.0980317, 0.106841, 0.0777942, 0.819439, 0.877896, 0.457828, 0.510037, 0.595583, 0.544166}, {0.211725, 0.197099, 0.963777, 0.667338, 0.113092, 0.147632, 0.620708, 0.757995, 0.229328, 0.47388, 0.816063, 0.0605873, 0.139066, 0.848169, 0.603927, 0.314721, 0.0434351, 0.0415893, 0.262455, 0.772159}, {0.914176, 0.793508, 0.116132, 0.756497, 0.196089, 0.916343, 0.180205, 0.739026, 0.875662, 0.629589, 0.415564, 0.85975, 0.273997, 0.0485718, 0.0975697, 0.0519238, 0.274022, 0.415604, 0.505318, 0.618742}, {0.950654, 0.507363, 0.552028, 0.251735, 0.183201, 0.67216, 0.601694, 0.0625084, 0.89297, 0.815141, 0.939407, 0.307871, 0.784146, 0.581321, 0.346162, 0.0477847, 0.209335, 0.716028, 0.0121161, 0.246589}, {0.96456, 0.643215, 0.972014, 0.364147, 0.871618, 0.877752, 0.480113, 0.801508, 0.201637, 0.692317, 0.667061, 0.2598, 0.750386, 0.998121, 0.424295, 0.464166, 0.727971, 0.14069, 0.764464, 0.0010696}, {0.527624, 0.347785, 0.96343, 0.0899984, 0.905125, 0.36313, 0.676845, 0.540017, 0.22872, 0.1991, 0.119226, 0.33707, 0.946223, 0.195273, 0.37057, 0.664146, 0.918937, 0.289148, 0.603618, 0.755626}, {0.307693, 0.0792097, 0.919159, 0.150217, 0.0769563, 0.0118642, 0.551847, 0.325501, 0.970283, 0.811517, 0.771427, 0.231341, 0.944249, 0.165469, 0.175012, 0.34189, 0.271031, 0.599527, 0.0681241, 0.850391}, {0.873895, 0.403294, 0.202396, 0.639195, 0.170235, 0.0342893, 0.52161, 0.251789, 0.530402, 0.0689965, 0.940151, 0.704955, 0.455631, 0.560949, 0.969443, 0.408274, 0.436962, 0.224118, 0.724691, 0.780059}, {0.555466, 0.62931, 0.130096, 0.2481, 0.295148, 0.98952, 0.574301, 0.774465, 0.0699445, 0.143248, 0.00886354, 0.926195, 0.312412, 0.501774, 0.563214, 0.500438, 0.782925, 0.375175, 0.17392, 0.317331}, {0.0935299, 0.972415, 0.973209, 0.85137, 0.515547, 0.329906, 0.933807, 0.408224, 0.149738, 0.299379, 0.943466, 0.807786, 0.306879, 0.997108, 0.88366, 0.724748, 0.860528, 0.624929, 0.0333227, 0.652093}, {0.851826, 0.051928, 0.391199, 0.769344, 0.302047, 0.308927, 0.294144, 0.0842778, 0.104755, 0.926387, 0.691091, 0.378429, 0.435485, 0.987174, 0.145068, 0.577528, 0.20811, 0.499713, 0.149781, 0.866024}, {0.764799, 0.971015, 0.0285943, 0.0134558, 0.181488, 0.786701, 0.532872, 0.924954, 0.594968, 0.572183, 0.590759, 0.00104434, 0.142063, 0.681538, 0.91041, 0.705111, 0.278934, 0.248488, 0.768425, 0.759739}, {0.490436, 0.0686746, 0.642557, 0.48674, 0.00508522, 0.629744, 0.857652, 0.968126, 0.679662, 0.281475, 0.473506, 0.703871, 0.751681, 0.566429, 0.748258, 0.445591, 0.0969151, 0.126632, 0.282596, 0.514258} };


	/*LinAlg::Matrix test1(myVect19);
	LinAlg::Vector test2 = test1.KMeans(2);
	std::cout << test1 << std::endl; 
	std::cout << test2 << std::endl;*/

	/*LinAlg::Matrix test1(myVect5);
	std::cout << "Starting QR\n";
	std::pair<LinAlg::Matrix, LinAlg::Matrix> QRA = test1.QRAlgorithm();
	std::cout << "Calculating checks\n";
	LinAlg::Matrix test2 = test1 * QRA.second;
	LinAlg::Matrix test3 = QRA.second * QRA.first;
	std::cout << test1 << std::endl;
	std::cout << QRA.first << std::endl;
	std::cout << QRA.second << std::endl;
	std::cout << (test2 == test3) << std::endl; *//*
	std::pair<LinAlg::Matrix, LinAlg::Matrix> HQ = test1.toHessenberg();
	std::cout << test1 << std::endl;
	std::cout << HQ.first << std::endl;
	std::cout << HQ.second << std::endl;*/
	
	// read in the matrix as a graph
	Graph::Graph test1("../Data/power-494-bus.mtx", true);
	std::cout << std::to_string(test1[493][493]) << std::endl;

	return 0;
}
